db_id,question,ground_truth,predicted,exact_match,bleu,complexity,errors
concert_singer,How many singers do we have?,SELECT count(*) FROM singer,SELECT count(*) FROM singer,True,1.0,medium,[]
concert_singer,What is the total number of singers?,SELECT count(*) FROM singer,SELECT count(*) FROM singer,True,1.0,medium,[]
concert_singer,"Show name, country, age for all singers ordered by age from the oldest to the youngest.","SELECT name ,  country ,  age FROM singer ORDER BY age DESC","SELECT name, country, age FROM singer ORDER BY age DESC",False,1.0,simple,['select_error']
concert_singer,"What are the names, countries, and ages for every singer in descending order of age?","SELECT name ,  country ,  age FROM singer ORDER BY age DESC","SELECT name, country, age FROM singer ORDER BY age DESC",False,1.0,simple,['select_error']
concert_singer,"What is the average, minimum, and maximum age of all singers from France?","SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'","SELECT avg(age), min(age), max(age) FROM singer WHERE country = 'France'",False,1.0,medium,['select_error']
concert_singer,"What is the average, minimum, and maximum age for all French singers?","SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'","SELECT avg(age), min(age), max(age) FROM singer WHERE country = 'France'",False,1.0,medium,['select_error']
concert_singer,Show the name and the release year of the song by the youngest singer.,"SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1","SELECT T2.Name, T2.release_year FROM singer AS T1 JOIN song AS T2 ON T1.song_id = T2.song_id ORDER BY T1.age LIMIT 1",False,0.03595290285752276,simple,"['select_error', 'from_error', 'order by_error']"
concert_singer,What are the names and release years for all the songs of the youngest singer?,"SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1","SELECT Song_Name, Release_Year FROM singer ORDER BY Age ASC LIMIT 1",False,0.46595384151899627,simple,"['select_error', 'from_error', 'order by_error']"
concert_singer,What are all distinct countries where singers above age 20 are from?,SELECT DISTINCT country FROM singer WHERE age  >  20,SELECT DISTINCT T1.country FROM singer AS T1 JOIN singer_in_match AS T2 ON T1.song_id = T2.song_id WHERE T2.age > 20,False,0.038761990534234056,simple,"['select_error', 'from_error', 'where_error']"
concert_singer,What are  the different countries with singers above age 20?,SELECT DISTINCT country FROM singer WHERE age  >  20,SELECT DISTINCT country FROM singer WHERE age > 20,True,1.0,simple,[]
concert_singer,Show all countries and the number of singers in each country.,"SELECT country ,  count(*) FROM singer GROUP BY country","SELECT Country, COUNT(*) FROM singer GROUP BY Country",False,1.0,complex,['select_error']
concert_singer,How many singers are from each country?,"SELECT country ,  count(*) FROM singer GROUP BY country","SELECT Country, COUNT(*) FROM singer GROUP BY Country",False,1.0,complex,['select_error']
concert_singer,List all song names by singers above the average age.,SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer),SELECT Song_name FROM singer WHERE age > (SELECT avg(age) FROM singer),True,1.0,complex,[]
concert_singer,What are all the song names by singers who are older than average?,SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer),SELECT song_name FROM singer WHERE age > (SELECT avg(age) FROM singer),True,1.0,complex,[]
concert_singer,Show location and name for all stadiums with a capacity between 5000 and 10000.,"SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000","SELECT LOCATION, name FROM stadium WHERE capacity BETWEEN 5000 AND 10000",False,1.0,simple,['select_error']
concert_singer,What are the locations and names of all stations with capacity between 5000 and 10000?,"SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000","SELECT LOCATION, name FROM stadium WHERE capacity BETWEEN 5000 AND 10000",False,1.0,simple,['select_error']
concert_singer,What is the maximum capacity and the average of all stadiums ?,"select max(capacity), average from stadium","SELECT max(capacity), avg(avg(avg(amount) FROM stadium",False,0.33887143631861766,medium,['select_error']
concert_singer,What is the average and maximum capacities for all stadiums ?,"select avg(capacity) ,  max(capacity) from stadium","SELECT avg(capacity), max(capacity) FROM stadium",False,1.0,medium,['select_error']
concert_singer,What is the name and capacity for the stadium with highest average attendance?,"SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1","SELECT name, capacity FROM stadium ORDER BY avg(average_attendance) DESC LIMIT 1",False,0.570282226440554,simple,"['select_error', 'from_error', 'order by_error']"
concert_singer,What is the name and capacity for the stadium with the highest average attendance?,"SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1","SELECT name, capacity FROM stadium ORDER BY avg(attendance) DESC LIMIT 1",False,0.570282226440554,simple,"['select_error', 'from_error', 'order by_error']"
concert_singer,How many concerts are there in year 2014 or 2015?,SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015,SELECT count(*) FROM concert WHERE YEAR = 2014 OR YEAR = 2015,True,1.0,medium,[]
concert_singer,How many concerts occurred in 2014 or 2015?,SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015,SELECT count(*) FROM concert WHERE YEAR = 2014 OR YEAR = 2015,True,1.0,medium,[]
concert_singer,Show the stadium name and the number of concerts in each stadium.,"SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id","SELECT T2.Name, count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id = T2.stadium_id GROUP BY T1.stadium_id",False,1.0,complex,['select_error']
concert_singer,"For each stadium, how many concerts play there?","SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id","SELECT T2.name, count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id = T2.stadium_id GROUP BY T1.stadium_id",False,1.0,complex,['select_error']
concert_singer,Show the stadium name and capacity with most number of concerts in year 2014 or after.,"SELECT T2.name ,  T2.capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  >=  2014 GROUP BY T2.stadium_id ORDER BY count(*) DESC LIMIT 1","SELECT T2.name, T1.capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id = T2.stadium_id WHERE T1.year >= 2014 GROUP BY T1.stadium_id ORDER BY count(*) DESC LIMIT 1",False,0.8349950232057651,complex,"['select_error', 'from_error', 'where_error', 'group by_error']"
concert_singer,What is the name and capacity of the stadium with the most concerts after 2013 ?,"select t2.name ,  t2.capacity from concert as t1 join stadium as t2 on t1.stadium_id  =  t2.stadium_id where t1.year  >  2013 group by t2.stadium_id order by count(*) desc limit 1","SELECT T1.name, T1.capacity FROM stadium AS T1 JOIN concert AS T2 ON T1.stadium_id = T2.stadium_id WHERE T2.year > 2014 GROUP BY T1.stadium_id ORDER BY count(*) DESC LIMIT 1",False,0.5272389035059565,complex,"['select_error', 'from_error', 'where_error', 'group by_error']"
concert_singer,Which year has most number of concerts?,SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1,SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1,True,1.0,complex,[]
concert_singer,What is the year that had the most concerts?,SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1,SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1,True,1.0,complex,[]
concert_singer,Show the stadium names without any concert.,SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert),SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert),True,1.0,complex,[]
concert_singer,What are the names of the stadiums without any concerts?,SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert),SELECT Name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert),True,1.0,complex,[]
concert_singer,Show countries where a singer above age 40 and a singer below 30 are from.,SELECT country FROM singer WHERE age  >  40 INTERSECT SELECT country FROM singer WHERE age  <  30,SELECT Country FROM singer WHERE age > 40 INTERSECT SELECT Country FROM singer WHERE age  30,False,0.8884420215438181,complex,[]
concert_singer,Show names for all stadiums except for stadiums having a concert in year 2014.,SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014,SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id = T2.stadium_id WHERE T1.year = 2014,True,1.0,complex,[]
concert_singer,What are the names of all stadiums that did not have a concert in 2014?,SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014,SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id = T2.club_id WHERE T1.year = 2014,False,0.8787419089273848,complex,[]
concert_singer,Show the name and theme for all concerts and the number of singers in each concert.,"SELECT T2.concert_name ,  T2.theme ,  count(*) FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id  =  T2.concert_id GROUP BY T2.concert_id","SELECT T2.Name, T2.Theme, COUNT(*) FROM singer_in_council AS T1 JOIN concert AS T2 ON T1.Konzert_ID = T2.Konzert_ID GROUP BY T1.Konzert_ID",False,0.5668706143897174,complex,"['select_error', 'from_error', 'group by_error']"
concert_singer,"What are the names , themes , and number of singers for every concert ?","select t2.concert_name ,  t2.theme ,  count(*) from singer_in_concert as t1 join concert as t2 on t1.concert_id  =  t2.concert_id group by t2.concert_id","SELECT T1.Name, T1.Theme, count(*) FROM singer AS T1 JOIN concert AS T2 ON T1.SongId = T2.SongId GROUP BY T1.SongId",False,0.4806216298219478,complex,"['select_error', 'from_error', 'group by_error']"
concert_singer,List singer names and number of concerts for each singer.,"SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id","SELECT T1.Name, COUNT(*) FROM singer AS T1 JOIN concert AS T2 ON T1.SongId = T2.SongId GROUP BY T1.SongId",False,0.3721106799318147,complex,"['select_error', 'from_error', 'group by_error']"
concert_singer,What are the names of the singers and number of concerts for each person?,"SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id","SELECT T2.Name, COUNT(*) FROM singer_in_council AS T1 JOIN singer AS T2 ON T1.SongId = T2.SongId GROUP BY T1.SongId",False,0.6139776196756084,complex,"['select_error', 'from_error', 'group by_error']"
concert_singer,List all singer names in concerts in year 2014.,SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014,SELECT T1.Name FROM singer AS T1 JOIN concert AS T2 ON T1.SongId = T2.SongId WHERE T2.Year = 2014,False,0.09377387930058756,complex,"['select_error', 'from_error', 'where_error']"
concert_singer,What are the names of the singers who performed in a concert in 2014?,SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014,SELECT T2.Name FROM concert AS T1 JOIN singer AS T2 ON T1.SongId = T2.SongId WHERE T1.Year = 2014,False,0.3016981786909101,complex,"['select_error', 'from_error', 'where_error']"
concert_singer,what is the name and nation of the singer who have a song having 'Hey' in its name?,"SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'","SELECT name, country FROM singer WHERE song LIKE ""%Hey%""",False,0.5445178846139404,simple,"['select_error', 'from_error', 'where_error']"
concert_singer,What is the name and country of origin of every singer who has a song with the word 'Hey' in its title?,"SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'","SELECT name, country FROM singer WHERE song LIKE ""%Hey%""",False,0.5445178846139404,simple,"['select_error', 'from_error', 'where_error']"
concert_singer,Find the name and location of the stadiums which some concerts happened in the years of both 2014 and 2015.,"SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015","SELECT T1.name, T2.location FROM stadium AS T1 JOIN concert AS T2 ON T1.stadium_id = T2.stadium_id WHERE T2.year = 2014 INTERSECT SELECT T1.name, T1.location FROM stadium AS T1 JOIN concert AS T2 ON T1.stadium_id = T2.stadium_id WHERE T2.year = 2015",False,0.4775066139564592,complex,"['select_error', 'from_error', 'where_error']"
concert_singer,What are the names and locations of the stadiums that had concerts that occurred in both 2014 and 2015?,"SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015","SELECT T1.name, T2.location FROM stadium AS T1 JOIN concert AS T2 ON T1.stadium_id = T2.stadium_id WHERE T2.year = 2014 INTERSECT SELECT T1.name, T1.location FROM stadium AS T1 JOIN concert AS T2 ON T1.stadium_id = T2.stadium_id WHERE T2.year = 2015",False,0.4775066139564592,complex,"['select_error', 'from_error', 'where_error']"
concert_singer,Find the number of concerts happened in the stadium with the highest capacity .,select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1),SELECT count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id = T2.stadium_id ORDER BY T2.capacity DESC LIMIT 1,False,0.34537865578685034,complex,"['select_error', 'from_error', 'where_error', 'order by_error', 'limit_error']"
concert_singer,What are the number of concerts that occurred in the stadium with the largest capacity ?,select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1),SELECT count(*) FROM stadium ORDER BY capacity DESC LIMIT 1,False,0.4621244161692115,complex,"['select_error', 'from_error', 'where_error', 'order by_error', 'limit_error']"
pets_1,Find the number of pets whose weight is heavier than 10.,SELECT count(*) FROM pets WHERE weight  >  10,SELECT count(*) FROM pets WHERE weight > 10,True,1.0,medium,[]
pets_1,How many pets have a greater weight than 10?,SELECT count(*) FROM pets WHERE weight  >  10,SELECT count(*) FROM pets WHERE weight > 10,True,1.0,medium,[]
pets_1,Find the weight of the youngest dog.,SELECT weight FROM pets ORDER BY pet_age LIMIT 1,SELECT weight FROM pets ORDER BY age LIMIT 1,False,0.6606328636027614,simple,"['select_error', 'from_error', 'order by_error']"
pets_1,How much does the youngest dog weigh?,SELECT weight FROM pets ORDER BY pet_age LIMIT 1,"SELECT count(*) FROM pets WHERE pet_name = ""dog"" AND age = (SELECT min(age) FROM pets)",False,0.01772984226469502,simple,"['select_error', 'from_error', 'order by_error', 'limit_error']"
pets_1,Find the maximum weight for each type of pet. List the maximum weight and pet type.,"SELECT max(weight) ,  petType FROM pets GROUP BY petType","SELECT pets, max(weight), pet_type FROM pets GROUP BY pets",False,0.45723134461864345,complex,"['select_error', 'from_error', 'group by_error']"
pets_1,List the maximum weight and type for each type of pet.,"SELECT max(weight) ,  petType FROM pets GROUP BY petType","SELECT pets, max(weight), pet_type FROM pets GROUP BY pets",False,0.45723134461864345,complex,"['select_error', 'from_error', 'group by_error']"
pets_1,Find number of pets owned by students who are older than 20.,SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20,SELECT count(*) FROM pets AS T1 JOIN Has_Phone AS T2 ON T1.Phone_ID = T2.Phone_ID WHERE T2.age > 20,False,0.37629571493834174,medium,"['select_error', 'from_error', 'where_error']"
pets_1,How many pets are owned by students that have an age greater than 20?,SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20,SELECT count(*) FROM pets WHERE age > 20,False,0.21547619141708346,medium,"['select_error', 'from_error', 'where_error']"
pets_1,Find the number of dog pets that are raised by female students (with sex F).,SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog',"SELECT count(*) FROM pets AS T1 JOIN Has_Phone AS T2 ON T1.Phone_ID = T2.Phone_ID WHERE T2.sex = ""F""",False,0.1968383023165305,complex,"['select_error', 'from_error', 'where_error']"
pets_1,How many dog pets are raised by female students?,SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog',"SELECT count(*) FROM pets WHERE T2.sex = ""F""",False,0.07371253235745745,complex,"['select_error', 'from_error', 'where_error']"
pets_1,Find the number of distinct type of pets.,SELECT count(DISTINCT pettype) FROM pets,SELECT count(*) FROM pets,False,0.23834081440475152,medium,['select_error']
pets_1,How many different types of pet are there?,SELECT count(DISTINCT pettype) FROM pets,SELECT count(DISTINCT pet_type) FROM pets,False,0.5,medium,['select_error']
pets_1,Find the first name of students who have cat or dog pet.,SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog',"SELECT DISTINCT T1.fname FROM Student AS T1 JOIN Has_Phone AS T2 ON T1.StuID = T2.StuID WHERE T2.Phone = ""Cat"" OR T2.Phone = ""dog""",False,0.3603744221681144,complex,"['select_error', 'from_error', 'where_error']"
pets_1,What are the first names of every student who has a cat or dog as a pet?,SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog',"SELECT DISTINCT T1.fname FROM Student AS T1 JOIN Has_Phone AS T2 ON T1.StuID = T2.StuID WHERE T2.Phone = ""Cat"" OR T2.Phone = ""Horses""",False,0.3603744221681144,complex,"['select_error', 'from_error', 'where_error']"
pets_1,Find the first name of students who have both cat and dog pets .,select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid join pets as t3 on t3.petid  =  t2.petid where t3.pettype  =  'cat' intersect select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid join pets as t3 on t3.petid  =  t2.petid where t3.pettype  =  'dog',"SELECT T1.fname FROM Student AS T1 JOIN Has_Phone AS T2 ON T1.StuID = T2.StuID WHERE T2.Phone = ""Cat"" INTERSECT SELECT T1.fname FROM Student AS T1 JOIN Has_Phone AS T2 ON T1.StuID = T2.StuID WHERE T2.Phone = ""dog""",False,0.3821773175021092,complex,"['select_error', 'from_error', 'where_error']"
pets_1,What are the students' first names who have both cats and dogs as pets?,SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' INTERSECT SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog',"SELECT T1.fname FROM Student AS T1 JOIN Has_Phone AS T2 ON T1.StuID = T2.StuID WHERE T2.Phone = ""Cat"" INTERSECT SELECT T1.Fname FROM Student AS T1 JOIN Has_Horses AS T2 ON T1.StuID = T2.StuID WHERE T2.Horses = ""Horses""",False,0.3821773175021092,complex,"['select_error', 'from_error', 'where_error']"
pets_1,Find the major and age of students who do not have a cat pet.,"SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')","SELECT major, age FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Horses WHERE pet_type = ""Cat"")",False,0.2530703179436357,complex,"['select_error', 'from_error', 'where_error']"
pets_1,"What major is every student who does not own a cat as a pet, and also how old are they?","SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')","SELECT major, age FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_pID WHERE PetID = ""Cat"")",False,0.2530703179436357,complex,"['select_error', 'from_error', 'where_error']"
pets_1,Find the id of students who do not have a cat pet.,SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat',"SELECT StuID FROM Student EXCEPT SELECT StuID FROM Has_Phone WHERE pets = ""Cat""",False,0.11844082573430699,complex,"['from_error', 'where_error']"
pets_1,What are the ids of the students who do not own cats as pets?,SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat',SELECT StuID FROM Student EXCEPT SELECT StuID FROM Has_Horses,False,0.04740271316927805,complex,"['from_error', 'where_error']"
pets_1,Find the first name and age of students who have a dog but do not have a cat as a pet.,"SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')","SELECT fname, age FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Phone)",False,0.011952352010784869,complex,"['select_error', 'from_error', 'where_error']"
pets_1,What is the first name of every student who has a dog but does not have a cat?,"SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')","SELECT fname FROM Student WHERE StuID IN (SELECT StuID FROM Has_ pet WHERE pets = ""dog"") EXCEPT SELECT StuID FROM Has_cat"")",False,0.014790375708015517,complex,"['select_error', 'from_error', 'where_error']"
pets_1,Find the type and weight of the youngest pet.,"SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1","SELECT pet_type, weight FROM pets ORDER BY age LIMIT 1",False,0.5348259312838877,simple,"['select_error', 'from_error', 'order by_error']"
pets_1,"What type of pet is the youngest animal, and how much does it weigh?","SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1","SELECT pets, count(*) FROM pets WHERE age = ( SELECT min(age) FROM pets )",False,0.02297185935845028,simple,"['select_error', 'from_error', 'order by_error', 'limit_error']"
pets_1,Find the id and weight of all pets whose age is older than 1.,"SELECT petid ,  weight FROM pets WHERE pet_age  >  1","SELECT pets_id, weight FROM pets WHERE age > 1",False,0.4671379777282001,simple,"['select_error', 'from_error', 'where_error']"
pets_1,What is the id and weight of every pet who is older than 1?,"SELECT petid ,  weight FROM pets WHERE pet_age  >  1","SELECT pet_id, weight FROM pets WHERE age > 1",False,0.4671379777282001,simple,"['select_error', 'from_error', 'where_error']"
pets_1,Find the average and maximum age for each type of pet.,"SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype","SELECT pets, avg(age), max(age) FROM pets GROUP BY pets",False,0.33599730590055277,complex,"['select_error', 'from_error', 'group by_error']"
pets_1,What is the average and maximum age for each pet type?,"SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype","SELECT pets, avg(age), max(age) FROM pets GROUP BY pets",False,0.33599730590055277,complex,"['select_error', 'from_error', 'group by_error']"
pets_1,Find the average weight for each pet type.,"SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype","SELECT pets, avg(weight) FROM pets GROUP BY pets",False,0.44833867003844585,complex,"['select_error', 'from_error', 'group by_error']"
pets_1,What is the average weight for each type of pet?,"SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype","SELECT pets, avg(weight) FROM pets GROUP BY pets",False,0.44833867003844585,complex,"['select_error', 'from_error', 'group by_error']"
pets_1,Find the first name and age of students who have a pet.,"SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid","SELECT DISTINCT T1.fname, T1.age FROM Student AS T1 JOIN Has_Phone AS T2 ON T1.StuID = T2.StuID WHERE T2.Phone = ""Phone""",False,0.5963584321358336,medium,"['select_error', 'from_error']"
pets_1,What are the different first names and ages of the students who do have pets?,"SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid","SELECT DISTINCT T1.fname, T1.age FROM Student AS T1 JOIN Has_Phone AS T2 ON T1.StuID = T2.StuID WHERE T2.pID = "" pets""",False,0.5963584321358336,medium,"['select_error', 'from_error']"
pets_1,Find the id of the pet owned by student whose last name is ‘Smith’.,SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith',SELECT pet_id FROM Has_Phone WHERE LName = 'Smith',False,0.046462271735933564,medium,"['select_error', 'from_error', 'where_error']"
pets_1,What is the id of the pet owned by the student whose last name is 'Smith'?,SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith',SELECT pet_id FROM Has_Phone WHERE LName = 'Smith',False,0.046462271735933564,medium,"['select_error', 'from_error', 'where_error']"
pets_1,Find the number of pets for each student who has any pet and student id.,"SELECT count(*) ,  T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid","SELECT count(*), T1.StuID FROM Student AS T1 JOIN Has_Phone AS T2 ON T1.StuID = T2.StuID GROUP BY T1.StuID",False,0.8725129388059689,complex,"['select_error', 'from_error']"
pets_1,"For students who have pets , how many pets does each student have ? list their ids instead of names .","select count(*) ,  t1.stuid from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid group by t1.stuid","SELECT StuID, count(*) FROM Has_Phone GROUP BY StuID",False,0.12125982739015963,complex,"['select_error', 'from_error', 'group by_error']"
pets_1,Find the first name and gender of student who have more than one pet.,"SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1","SELECT T1.fname, T1.sex FROM Student AS T1 JOIN Has_Phone AS T2 ON T1.StuID = T2.StuID GROUP BY T1.StuID HAVING count(*) > 1",False,0.8942255541978509,complex,"['select_error', 'from_error']"
pets_1,What is the first name and gender of the all the students who have more than one pet?,"SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1","SELECT T1.fname, T1.sex FROM Student AS T1 JOIN Has_Phone AS T2 ON T1.StuID = T2.StuID GROUP BY T1.StuID HAVING count(*) > 1",False,0.8942255541978509,complex,"['select_error', 'from_error']"
pets_1,Find the last name of the student who has a cat that is age 3.,SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat',SELECT lname FROM Student WHERE age = 3 AND StuID = 1,False,0.024474609463900163,complex,"['select_error', 'from_error', 'where_error']"
pets_1,What is the last name of the student who has a cat that is 3 years old?,SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat',SELECT lname FROM Student WHERE age = 3 AND StuID = 1,False,0.024474609463900163,complex,"['select_error', 'from_error', 'where_error']"
pets_1,Find the average age of students who do not have any pet .,select avg(age) from student where stuid not in (select stuid from has_pet),SELECT avg(age) FROM Student WHERE StuID NOT IN ( SELECT StuID FROM Has_Pilot ),False,0.8843946454355334,complex,"['from_error', 'where_error']"
pets_1,What is the average age for all students who do not own any pets ?,select avg(age) from student where stuid not in (select stuid from has_pet),SELECT avg(age) FROM Student WHERE StuID NOT IN ( SELECT StuID FROM Has_piad),False,0.8843946454355334,complex,"['from_error', 'where_error']"
car_1,How many continents are there?,SELECT count(*) FROM CONTINENTS;,SELECT count(*) FROM continents,False,0.8668778997501817,medium,"['select_error', 'from_error']"
car_1,What is the number of continents?,SELECT count(*) FROM CONTINENTS;,SELECT count(*) FROM continents,False,0.8668778997501817,medium,"['select_error', 'from_error']"
car_1,"How many countries does each continent have? List the continent id, continent name and the number of countries.","SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;","SELECT T1.country, T1.Country_name, count(*) FROM continents AS T1 JOIN countries AS T2 ON T1.country_id = T2.country_id GROUP BY T1.country_id",False,0.5842826969463971,complex,"['select_error', 'from_error', 'group by_error']"
car_1,"For each continent, list its id, name, and how many countries it has?","SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;","SELECT T1. continent, T1.country, count(*) FROM continents AS T1 JOIN country AS T2 ON T1.country_id = T2.country_id GROUP BY T1.country_id",False,0.44130156394078607,complex,"['select_error', 'from_error', 'group by_error']"
car_1,How many countries are listed?,SELECT count(*) FROM COUNTRIES;,SELECT count(*) FROM countries,False,0.8668778997501817,medium,"['select_error', 'from_error']"
car_1,How many countries exist?,SELECT count(*) FROM COUNTRIES;,SELECT count(*) FROM countries,False,0.8668778997501817,medium,"['select_error', 'from_error']"
car_1,"How many models does each car maker produce? List maker full name, id and the number.","SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;","SELECT T1.Fname, T1.Fname, count(*) FROM Car_Makers AS T1 JOIN Cars AS T2 ON T1.Machine_id = T2.machine_id GROUP BY T1.machine_id",False,0.46100720018382324,complex,"['select_error', 'from_error', 'group by_error']"
car_1,"What is the full name of each car maker, along with its id and how many models it produces?","SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;","SELECT T1.Fname, T1.Fname, count(*) FROM Car_Makers AS T1 JOIN Model_Model AS T2 ON T1.Machine_id = T2.machine_id GROUP BY T1.manufacturer_id",False,0.46100720018382324,complex,"['select_error', 'from_error', 'group by_error']"
car_1,Which model of the car has the minimum horsepower?,SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;,SELECT model FROM cars_data ORDER BY horsepower LIMIT 1,False,0.021743389868048763,medium,"['select_error', 'from_error', 'order by_error', 'limit_error']"
car_1,What is the model of the car with the smallest amount of horsepower?,SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;,SELECT model FROM cars_data ORDER BY horsepower LIMIT 1,False,0.021743389868048763,medium,"['select_error', 'from_error', 'order by_error', 'limit_error']"
car_1,Find the model of the car whose weight is below the average weight.,SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA),SELECT model FROM cars WHERE weight  (SELECT avg(weight) FROM cars),False,0.21519138932399784,complex,"['select_error', 'from_error', 'where_error']"
car_1,What is the model for the car with a weight smaller than the average?,SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA),SELECT model FROM cars_data WHERE weight  (SELECT avg(weight) FROM cars),False,0.228564473267841,complex,"['select_error', 'from_error', 'where_error']"
car_1,Find the name of the makers that produced some cars in the year of 1970?,SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';,SELECT T1.machine_name FROM manufacturers AS T1 JOIN car_makers AS T2 ON T1.machine_id = T2.machine_id WHERE T2.year = 1970,False,0.039345058134760844,complex,"['select_error', 'from_error', 'where_error']"
